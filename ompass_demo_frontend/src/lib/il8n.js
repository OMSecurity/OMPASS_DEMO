import i18n from "i18next";
import { initReactI18next } from "react-i18next";
const resources = {
  en: {
    translation: {
      Login: "Login",
      OMPASSLogin: "OMPASS Login",

      Welecometo: "",
      OMPASS: "OMPASS",
      goBack: "Go back",
      OMPASSText: "Welcome to the demo site.",
      Welecometo2: "Welecome to",
      OMPASS2: "OMPASS",
      TTA: "Certification of GS 1st Grade from TTA",
      subTitle: "Next-generation integrated authentication solution",
      FidoAlliance: "FIDO Alliance International Certification",
      enterId: "Enter ID",
      enterPw: "Enter password",
      invalidFidoToken: "Invalid access key. Please contact your manager",
      successLogin: "Login succeeded",
      failLogin: "ID or password does not match",
      wrongId: "Invalid ID",
      goRegister: "Don't have a OMPASS account?",
      findPw: "Forgot your passowrd?",
      register: "Register",
      resetPw: "Reset password",
      sendInitMail: "A verification email has been sent",

      pleaseEnterId: "Please enter your ID",
      existId: "Please enter your ID",
      pleaseEnterPw: "Please enter your password",
      passwordDoNotMatch: "Passwords do not match",
      enterName: "Enter name",
      enterEmail: "Enter email",
      successRegister: "Registration completed",
      failRegister: "Registration failed",
      pleaseEnterYourPasswordAgain: "Please enter your password again",
      findId: "Find ID",
      findPw2: "Find password",
      id: "ID",
      pw: "Password",
      email: "Email",
      name: "Name",
      login: "Home",
      logout: "Logout",

      welcome: "Welcome,",
      // ompass2FaLogin:
      //   "You have been successfully authenticated via Two-Factor Athentication.",
      ompass2FaLogin: "",
      ompass2FaLogin2: "You have been successfully authenticated via ",
      ompass2FaLogin3: "Two-Factor Athentication.",
      // ompass:
      //   "You have been successfully authenticated via Two-Factor Athentication.",
      ompass: "",
      ompass2: "You have been successfully authenticated via",
      ompass3: " OMPASS",
      passwordLogin: "",
      passwordLogin2: "You have been successfully authenticated via ",
      passwordLogin3: "password login.",
      deleteOmpass: "Using OMPASS",
      registerOmpass: "Register OMPASS",
      disableOmpass: "Disable Two-Factor Authentication",
      enableOmpass: "Enable Two-Factor Authentication",
      nim: "!",

      successDeleteFido: "FIDO2 deletion is completed",
      tryAgain: "Please try again",

      pleaseEnterYourPasswordAgainForChange: "Please enter your password again",
      successChangePassword: "Please enter your password again",
      pleaseEnterNewPassword: "Please enter new password",
      pleaseEnterNewPasswordAgain: "Please enter new password",
      changePw: "Change",
      InvalidMailToken: "This original email verification is no longer valid",
      mailTokenTimeOut: "E-mail verification time is expired",

      invalidID: "This ID does not exist. Please register it first.",
      goPasswordLogin: "Please proceed with password login first",
      successOmpass2fa: "OMPASS secondary authentication completed",
      successOmpassAuth: "OMPASS authentication completed",
      failFidoLogin: "OMPASS authentication completed",

      successRegisterOmpass: "OMPASS registration completed",
      failRegisterOmpass:
        "OMPASS registration failed due to token authentication failure",
    },
  },
  ko: {
    translation: {
      Login: "로그인",
      Welecometo2: "",
      OMPASS2: "",
      OMPASSLogin: "OMPASS 로그인",
      Welecometo: "에 오신걸 환영합니다.",
      OMPASS: "원모어패스",
      OMPASSText: "데모 사이트에 오신걸 환영합니다.",
      goBack: "돌아가기",
      TTA: "TTA GS 1등급 인증",
      subTitle: "차세대 통합 인증 솔루션",
      FidoAlliance: "FIDO Aliance 국제 인증",
      enterId: "아이디를 입력해주세요.",
      enterPw: "비밀번호를 입력하세요.",
      invalidFidoToken:
        "유효하지 않은 Access Key 입니다. 관리자에게 문의하세요.",
      successLogin: "로그인 성공",
      failLogin: "아이디 혹은 비밀번호가 일치하지 않습니다.",
      wrongId: "잘못된 아이디 입니다.",
      goRegister: "아직 회원이 아니신가요?",
      findPw: "비밀번호를 잊으셨나요?",
      register: "회원가입",
      resetPw: "비밀번호 초기화",
      sendInitMail: "인증메일을 발송하였습니다.",

      pleaseEnterId: "아이디를 입력하세요.",
      existId: "중복되는 아이디 입니다.",
      pleaseEnterPw: "비밀번호를 입력하세요.",
      passwordDoNotMatch: "비밀번호가 일치하지 않습니다.",
      enterName: "이름을 입력하세요.",
      enterEmail: "이메일을 입력하세요",
      successRegister: "회원가입 완료",
      failRegister: "회원가입 실패",
      pleaseEnterYourPasswordAgain: "비밀번호 재입력",
      findId: "아이디 찾기",
      findPw2: "비밀번호 찾기",
      id: "아이디",
      pw: "비밀번호",
      email: "이메일",
      name: "이름",
      login: "홈",

      logout: "로그아웃",

      welcome: "안녕하세요.",
      ompass2FaLogin: "원모어패스 2차 인증",
      ompass2FaLogin2: " 을 통해 인증하였습니다.",
      ompass2FaLogin3: "",
      ompass: "원모어패스",
      ompass2: " 를 통해 인증하였습니다.",
      ompass3: "",
      passwordLogin: "패스워드 로그인",
      passwordLogin2: "을 통해 인증하였습니다.",
      passwordLogin3: "",
      deleteOmpass: "OMPASS 사용중",
      registerOmpass: "OMPASS 등록",
      disableOmpass: "2차 인증 해제",
      enableOmpass: "2차 인증 등록",
      nim: "님은",

      successDeleteFido: "FIDO2 삭제가 완료되었습니다.",
      tryAgain: "다시 시도해주세요",

      pleaseEnterYourPasswordAgainForChange:
        "입력한 비밀번호를 다시 입력하세요.",
      successChangePassword: "비밀번호가 변경 되었습니다.",
      pleaseEnterNewPassword: "변경할 비밀번호를 입력하세요.",
      pleaseEnterNewPasswordAgain: "비밀번호를 다시 한번 입력하세요",
      changePw: "비밀번호 변경하기",
      InvalidMailToken: "메일 인증 토큰이 유효하지 않습니다.",
      mailTokenTimeOut: "메일 인증 유효시간이 만료되었습니다.",

      invalidID: "존재하지 않는 회원입니다. 회원가입 후 이용해주세요",
      goPasswordLogin: "1차 인증(패스워드 로그인)을 먼저 진행해주세요",
      successOmpass2fa: "OMPASS 2차 인증이 완료 되었습니다",
      successOmpassAuth: "OMPASS 인증이 완료되었습니다",
      failFidoLogin: "OMPASS 로그인 실패하였습니다. 다시 시도해주세요.",

      successRegisterOmpass: "OMPASS 등록이 완료되었습니다",
      failRegisterOmpass: "OMPASS 등록을 실패하였습니다. (토큰 인증 실패)",
    },
  },
};

i18n.use(initReactI18next).init({
  resources,
  lng: "en",
});

export default i18n;
